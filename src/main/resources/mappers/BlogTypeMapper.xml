<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.johnny.myBlog.dao.BlogTypeDao">
	<resultMap type="BlogType" id="BlogTypeResult">
		<result property="id" column="id"></result>
		<result property="typeName" column="typeName"></result>
		<result property="orderNum" column="orderNum"></result>
	</resultMap>
	
	<insert id="add" parameterType="BlogType">
		insert into t_blogtype (typeName,orderNum) values (#{typeName},#{orderNum})
	</insert>
	
	<update id="update" parameterType="BlogType">
		update t_blogtype
		<set>
			<if test="typeName!=null and typeName!=''">
				typeName=#{typeName},
			</if>
			<if test="orderNum!=null and orderNum!=''">
				orderNum=#{orderNum},
			</if>
		</set>
		where id=#{id}
	</update>
	
	<delete id="delete" parameterType="Integer">
		delete from t_blogtype where id=#{id}
	</delete>
	
	<select id="getBlogTypeById" parameterType="Integer" resultMap="BlogTypeResult">
		select * from t_blogtype where id=#{id}
	</select>
	
	<select id="getBlogTypeWithoutParam" resultMap="BlogTypeResult">
		select t2.id,t2.typeName,count(t1.id) as blogCount from t_blog t1 right join 
		t_blogtype t2 on t1.type_id=t2.id group by t2.typeName order by t2.orderNum
	</select>
	
	<select id="getBlogTypeByParam" parameterType="Map" resultMap="BlogTypeResult">
		select * from t_blogtype
		<if test="typeName!=null and typeName!=''">
			where typeName=#{typeName}
		</if>
		order by orderNum
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<select id="getBlogCount" parameterType="Map" resultType="Long">
		select count(*) from t_blogtype
	</select>
</mapper>